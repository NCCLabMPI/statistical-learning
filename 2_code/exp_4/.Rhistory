ggplot() +
geom_col(accuracy_data3, mapping=aes(sess, resp_mean, group=target, fill=target,color=tgt_pos),
position = position_dodge(0.5), width=0.5) +
geom_errorbar(accuracy_data3, mapping=aes(sess, y=resp_mean, ymin=resp_mean-se, ymax=resp_mean+se,
group=target,fill=target,color=tgt_pos), position=position_dodge(0.5), width = 0.3, size = 1) +
scale_x_discrete(name = "Session") +
scale_y_continuous(limits = c(0,1), name = "mean detection accuracy [bars = SEM]") +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Set3") +
labs(fill="Syllable",color="Position") +
#guides(colour=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold"),
legend.background = element_blank()) +
ggsave('targetdetection_accuracy_target.png', width = w, height = h+1)
ggplot() +
geom_col(accuracy_data3, mapping=aes(sess, resp_mean, group=target, fill=target,color=tgt_pos),
position = position_dodge(0.5), width=0.5) +
geom_errorbar(accuracy_data3, mapping=aes(sess, y=resp_mean, ymin=resp_mean-se, ymax=resp_mean+se,
group=target,fill=target,color=tgt_pos), position=position_dodge(0.5), width = 0.3, size = 1) +
scale_x_discrete(name = "Session") +
scale_y_continuous(limits = c(0,1), name = "mean detection accuracy [bars = SEM]") +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Set3") +
labs(fill="Syllable",color="Position") +
#guides(colour=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold"),
legend.key = element_rect(colour = "transparent", fill = "white"),
legend.background = element_blank()) +
ggsave('targetdetection_accuracy_target.png', width = w, height = h+1)
ggplot() +
geom_col(accuracy_data3, mapping=aes(sess, resp_mean, group=target, fill=target,color=tgt_pos),
position = position_dodge(0.5), width=0.5) +
geom_errorbar(accuracy_data3, mapping=aes(sess, y=resp_mean, ymin=resp_mean-se, ymax=resp_mean+se,
group=target,fill=target,color=tgt_pos), position=position_dodge(0.5), width = 0.3, size = 1) +
scale_x_discrete(name = "Session") +
scale_y_continuous(limits = c(0,1), name = "mean detection accuracy [bars = SEM]") +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Set3") +
labs(fill="Syllable",color="Position") +
#guides(colour=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold"),
legend.key = element_rect(colour = "white", fill = "white"),
legend.background = element_blank()) +
ggsave('targetdetection_accuracy_target.png', width = w, height = h+1)
ggplot() +
geom_col(accuracy_data3, mapping=aes(sess, resp_mean, group=target, fill=target,color=tgt_pos),
position = position_dodge(0.5), width=0.5) +
geom_errorbar(accuracy_data3, mapping=aes(sess, y=resp_mean, ymin=resp_mean-se, ymax=resp_mean+se,
group=target,fill=target,color=tgt_pos), position=position_dodge(0.5), width = 0.3, size = 1) +
scale_x_discrete(name = "Session") +
scale_y_continuous(limits = c(0,1), name = "mean detection accuracy [bars = SEM]") +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Set3") +
labs(fill="Syllable",color="Position") +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold"),
legend.key = element_rect(colour = "white", fill = "white"),
legend.background = element_blank()) +
ggsave('targetdetection_accuracy_target.png', width = w, height = h+1)
ggplot() +
geom_col(accuracy_data3, mapping=aes(sess, resp_mean, group=target, fill=target,color=tgt_pos),
position = position_dodge(0.5), width=0.5) +
geom_errorbar(accuracy_data3, mapping=aes(sess, y=resp_mean, ymin=resp_mean-se, ymax=resp_mean+se,
group=target,fill=target,color=tgt_pos), position=position_dodge(0.5), width = 0.3, size = 1) +
scale_x_discrete(name = "Session") +
scale_y_continuous(limits = c(0,1), name = "mean detection accuracy [bars = SEM]") +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Set3") +
labs(fill="Syllable",color="Position") +
guides(color=guide_legend(override.aes=list(fill=NA,color=NA))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold"),
legend.key = element_rect(colour = "white", fill = "white"),
legend.background = element_blank()) +
ggsave('targetdetection_accuracy_target.png', width = w, height = h+1)
ggplot() +
geom_col(accuracy_data3, mapping=aes(sess, resp_mean, group=target, fill=target,color=tgt_pos),
position = position_dodge(0.5), width=0.5) +
geom_errorbar(accuracy_data3, mapping=aes(sess, y=resp_mean, ymin=resp_mean-se, ymax=resp_mean+se,
group=target,fill=target,color=tgt_pos), position=position_dodge(0.5), width = 0.3, size = 1) +
scale_x_discrete(name = "Session") +
scale_y_continuous(limits = c(0,1), name = "mean detection accuracy [bars = SEM]") +
scale_color_brewer(palette="Dark2") +
scale_fill_brewer(palette="Set3") +
labs(fill="Syllable",color="Position") +
guides(color=guide_legend(override.aes=list(fill=NA))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
#legend.key = element_rect(colour = "white", fill = "white"),
#legend.background = element_blank()) +
ggsave('targetdetection_accuracy_target.png', width = w, height = h+1)
ggplot() +
geom_point(data = data_sum3, mapping = aes(x=targets_ord, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data = data_sum4, mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ sess) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_syllable.png', width = w, height = h+1)
# Show RT for position, syllable, session
data_sum3 <- data %>%
summarySE(measurevar="rt", groupvars=c("tgt_pos","target","sess","subject"), na.rm=TRUE)
# Show RT for session & syllable
data_sum4 <- data %>%
summarySE(measurevar="rt", groupvars=c("target","sess"), na.rm=TRUE)
# Show RT for position, syllable, session, condition order
data_sum5 <- data %>%
summarySE(measurevar="rt", groupvars=c("tgt_pos","target","sess","subject","cond_order"), na.rm=TRUE)
# Show RT for session & syllable & condition order
data_sum6 <- data %>%
summarySE(measurevar="rt", groupvars=c("target","sess","cond_order"), na.rm=TRUE)
ggplot() +
geom_point(data = data_sum3, mapping = aes(x=targets_ord, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data = data_sum4, mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ sess) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_syllable.png', width = w, height = h+1)
ggplot() +
geom_point(data = data_sum3, mapping = aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data = data_sum4, mapping = aes(x =target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ sess) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_syllable.png', width = w, height = h+1)
ggplot(data=data_sum4, mapping=aes(x=target, y=rt_median, color=sess)) +
geom_point(size=1.5) +
geom_smooth(aes(group=sess, fill=sess), ci=TRUE, size=1) +
scale_colour_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Pastel1") +
labs(colour= "Condition") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
guides(fill=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_syllable_overlay.png', width = w, height = h+1)
ggplot(data=data_sum4, mapping=aes(x=target, y=rt_mean, color=sess)) +
geom_point(size=1.5) +
geom_smooth(aes(group=sess, fill=sess), se=TRUE, size=1) +
scale_colour_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Pastel1") +
labs(colour= "Condition") + ylab('Mean Response Time (ms) [bars = SEM]') + xlab('Syllable (Target)') +
guides(fill=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_syllable_overlay_mean.png', width = w, height = h+1)
# Struct -> Rand
data_sum5 %>%
filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
# Struct -> Rand
data_sum5 %>%
filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
data_sum6
# Struct -> Rand
data_sum5 %>%
filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
data_sum5
# Struct -> Rand
data_sum5 %>%
filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
data_sum5
data_sum5 %>%
filter(cond_order=="struct-rand")
library(dyplr)
library(dplyr)
# Struct -> Rand
data_sum5 %>%
filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
data_sum5 %>%
dplyr::filter(cond_order=="struct-rand")
# Struct -> Rand
data_sum5 %>%
dplyr::filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
# Struct -> Rand
data_sum5 %>%
dplyr::filter(cond_order=="struct-rand") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=dplyr::filter(data_sum6,cond_order=="struct-rand"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ fct_rev(sess)) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR.png', width = w, height = h+1)
# Rand -> Struct
data_sum5 %>%
dplyr::filter(cond_order=="rand-struct") %>%
ggplot() +
geom_point(mapping=aes(x=target, y=rt_median, colour = tgt_pos), size = 2) +
geom_smooth(data=dplyr::filter(data_sum6,cond_order=="rand-struct"), mapping = aes(x = target, y = rt_median, group=1), ci=TRUE,size=1, colour="BLACK") +
facet_grid(.~ sess) +
scale_colour_brewer(palette = "Set2") +
labs(colour= "Target Position") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("B. Rand - Struct") +
ggsave('targetdetection_syllable_RS.png', width = w, height = h+1)
# Struct -> Rand
ggplot(data=dplyr::filter(data_sum6,cond_order=="struct-rand"), mapping=aes(x=target, y=rt_median, colour=sess)) +
geom_point(size=1.5) +
geom_smooth(aes(group=sess, fill=sess), ci=TRUE, size=1) +
scale_colour_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Pastel1") +
labs(colour= "Condition") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
guides(fill=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Struct - Rand") +
ggsave('targetdetection_syllable_SR_overlay_median.png', width = w, height = h+1)
# Rand -> Struct
ggplot(data=dplyr::filter(data_sum6,cond_order=="rand-struct"),mapping=aes(x=target, y=rt_median, colour=sess)) +
geom_point(size=1.5) +
geom_smooth(aes(group=sess, fill=sess), ci=TRUE, size=1) +
scale_colour_brewer(palette = "Set1") +
scale_fill_brewer(palette = "Pastel1") +
labs(colour= "Condition") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Syllable (Target)') +
guides(fill=FALSE) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("Rand - Struct") +
ggsave('targetdetection_syllable_RS_overlay_median.png', width = w, height = h+1)
data
data <- data %>%
mutate(rt_secs = rt/1000)
data
glm.f.1 <- glmer(rt_secs ~ target + (1 | cond_order/subject), data = data, family = Gamma)
summary(glm.f.1)
plot(glm.f.1)
qqnorm(resid(glm.f.1))
Anova(glm.f.1)
glm.f.2 <- glmer(rt_secs ~ target*sess + (1 | cond_order/subject), data = data, family = Gamma)
summary(glm.f.2)
plot(glm.f.2)
qqnorm(resid(glm.f.2))
Anova(glm.f.2)
data_sum9 <- data_delta %>%
summarySE(measurevar="rt_median", groupvars=c("delta_rt","sess","tgt_word"), na.rm=TRUE)
data_sum10 <- data_delta %>%
summarySE(measurevar="rt_median", groupvars=c("delta_rt","sess"), na.rm=TRUE)
ggplot() +
geom_point(data = data_sum9, mapping = aes(x=delta_rt,y=rt_median_mean, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum9, mapping = aes(x = delta_rt, y = rt_median_mean, group = tgt_word), colour = "GREY",size = .5) +
geom_point(data = data_sum10, mapping = aes(x = delta_rt, y = rt_median_mean), colour = "BLACK") +
geom_errorbar(data = data_sum10, mapping = aes(x = delta_rt, y = rt_median_mean, ymin = rt_median_mean-se, ymax = rt_median_mean+se), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum10, mapping = aes(x = delta_rt, y = rt_median_mean, group = 1), colour = "BLACK", size = .9) +
facet_grid(~sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial (Word)") + ylab('Mean of Median Diff (ms) [bars = SEM]') + xlab(expression(Delta*"Target Position")) +
scale_x_discrete(labels=c(expression(delta*"1-2"),expression(delta*"2-3"),expression(delta*"1-3"))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_delta_means.png', width = w, height = h)
# Mean +- SD
ggplot() +
geom_point(data = data_sum1, mapping = aes(x=tgt_pos,y=rt_mean, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum1, mapping = aes(x = tgt_pos, y = rt_mean, group = tgt_word, colour = factor(tgt_word)),size = .5) +
geom_point(data = data_sum2, mapping = aes(x = tgt_pos, y = rt_mean), colour = "BLACK") +
geom_errorbar(data = data_sum2, mapping = aes(x = tgt_pos, y = rt_mean, ymin = rt_mean-se, ymax = rt_mean+se), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum2, mapping = aes(x = tgt_pos, y = rt_mean, group = 1), colour = "BLACK", size = .9) +
facet_grid(.~ sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial/Word") + ylab('Mean Response Time (ms) [bars = SEM]') + xlab('Target Postion') +
scale_x_discrete(limits=c(1:3)) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("A.") +
ggsave('targetdetection_overall.png', width = w, height = h)
# Median +- CI
ggplot() +
geom_point(data = data_sum1, mapping = aes(x=tgt_pos,y=rt_median, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum1, mapping = aes(x = tgt_pos, y = rt_median, group = tgt_word, colour = factor(tgt_word)),size = .5) +
geom_point(data = data_sum2, mapping = aes(x = tgt_pos, y = rt_median), colour = "BLACK") +
geom_errorbar(data = data_sum2, mapping = aes(x = tgt_pos, y = rt_median, ymin = rt_median-ci, ymax = rt_median+ci), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum2, mapping = aes(x = tgt_pos, y = rt_median, group = 1), colour = "BLACK", size = .9) +
facet_grid(.~ sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial/Word") + ylab('Median Response Time (ms) [bars = CI]') + xlab('Target Postion') +
scale_x_discrete(limits=c(1:3)) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggtitle("A.") +
ggsave('targetdetection_overall_median.png', width = w, height = h)
data_delta
options(scipen=999)
data_delta <- data_sum7 %>%
arrange(subject, sess,tgt_word) %>%
group_by(subject,sess,tgt_word) %>%
mutate(delta = rt_median - lead(rt_median,default=first(rt_median))) %>%
mutate(delta = round(delta,digits=5))
#This works for 1-2 and 2-3, but for 3-1 it pulls the "1" not from the same group, but from the next item in the array. adding order_by as an argument in lead, leads it to pull from the next grouping factor (i.e. 1st item in struct-tgt_word 1 after rand-tgt_word 1)
library(data.table)
data_delta <- data_delta %>%
arrange(subject,sess,tgt_word) %>%
group_by(subject,sess,tgt_word) %>%
mutate(delta1.3 = rt_median - lead(rt_median,n=2)) %>%
mutate(delta1.3 = data.table::shift(delta1.3,n=2))
vals.1.3 <- data_delta$delta1.3[which(data_delta$tgt_pos==3)]
data_delta$delta[which(data_delta$tgt_pos==3)] <- vals.1.3
data_delta <- data_delta[,-13]
data_delta
colnames(data_delta)[2] <- "delta_rt"
data_delta <- data_delta %>%
mutate(
delta_rt = case_when(delta_rt==1 ~ "D1-2",
delta_rt==2 ~ "D2-3",
delta_rt==3 ~ "D1-3"))
data_delta <- data_delta %>% mutate(delta_rt = as.factor(delta_rt))
data_delta$delta_rt <- factor(data_delta$delta_rt, levels = c("D1-2", "D2-3", "D1-3"))
data_sum9 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess","tgt_word"), na.rm=TRUE)
data_sum10 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess"), na.rm=TRUE)
ggplot() +
geom_point(data = data_sum9, mapping = aes(x=delta_rt,y=rt_median_mean, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum9, mapping = aes(x = delta_rt, y = rt_median_mean, group = tgt_word), colour = "GREY",size = .5) +
geom_point(data = data_sum10, mapping = aes(x = delta_rt, y = rt_median_mean), colour = "BLACK") +
geom_errorbar(data = data_sum10, mapping = aes(x = delta_rt, y = rt_median_mean, ymin = rt_median_mean-se, ymax = rt_median_mean+se), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum10, mapping = aes(x = delta_rt, y = rt_median_mean, group = 1), colour = "BLACK", size = .9) +
facet_grid(~sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial (Word)") + ylab('Mean of Median Diff (ms) [bars = SEM]') + xlab(expression(Delta*"Target Position")) +
scale_x_discrete(labels=c(expression(delta*"1-2"),expression(delta*"2-3"),expression(delta*"1-3"))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_delta_means.png', width = w, height = h)
data_sum9
data_sum9 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess","tgt_word"), na.rm=TRUE)
data_sum10 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess"), na.rm=TRUE)
ggplot() +
geom_point(data = data_sum9, mapping = aes(x=delta_rt,y=delta_mean, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum9, mapping = aes(x = delta_rt, y = delta_mean, group = tgt_word), colour = "GREY",size = .5) +
geom_point(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean), colour = "BLACK") +
geom_errorbar(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean, ymin = rt_median_mean-se, ymax = rt_median_mean+se), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean, group = 1), colour = "BLACK", size = .9) +
facet_grid(~sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial (Word)") + ylab('Mean of Median Diff (ms) [bars = SEM]') + xlab(expression(Delta*"Target Position")) +
scale_x_discrete(labels=c(expression(delta*"1-2"),expression(delta*"2-3"),expression(delta*"1-3"))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_delta_means.png', width = w, height = h)
data_sum9 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess","tgt_word"), na.rm=TRUE)
data_sum10 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess"), na.rm=TRUE)
ggplot() +
geom_point(data = data_sum9, mapping = aes(x=delta_rt,y=delta_mean, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum9, mapping = aes(x = delta_rt, y = delta_mean, group = tgt_word), colour = "GREY",size = .5) +
geom_point(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean), colour = "BLACK") +
geom_errorbar(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean, ymin = delta_mean-se, ymax = delta_mean+se), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean, group = 1), colour = "BLACK", size = .9) +
facet_grid(~sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial (Word)") + ylab('Mean of Median Diff (ms) [bars = SEM]') + xlab(expression(Delta*"Target Position")) +
scale_x_discrete(labels=c(expression(delta*"1-2"),expression(delta*"2-3"),expression(delta*"1-3"))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_delta_means.png', width = w, height = h)
data_sum9 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess","tgt_word"), na.rm=TRUE)
data_sum10 <- data_delta %>%
summarySE(measurevar="delta", groupvars=c("delta_rt","sess"), na.rm=TRUE)
ggplot() +
geom_point(data = data_sum9, mapping = aes(x=delta_rt,y=delta_mean, colour = factor(tgt_word)), size = 2) +
geom_line(data = data_sum9, mapping = aes(x = delta_rt, y = delta_mean, group = tgt_word), colour = "GREY",size = .5) +
geom_point(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean), colour = "BLACK") +
geom_errorbar(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean, ymin = delta_mean-se, ymax = delta_mean+se), colour = "BLACK", width = 0.1, size = 0.8) +
geom_line(data = data_sum10, mapping = aes(x = delta_rt, y = delta_mean, group = 1), colour = "BLACK", size = .9) +
facet_grid(~sess) +
scale_colour_brewer(palette = "Paired") +
labs(colour= "Trial (Word)") + ylab('Mean of Median Differences (ms) [bars = SEM]') + xlab(expression(Delta*"Target Position")) +
scale_x_discrete(labels=c(expression(delta*"1-2"),expression(delta*"2-3"),expression(delta*"1-3"))) +
theme_minimal() +
theme(text = element_text(family = "LM Roman 10", face="bold")) +
ggsave('targetdetection_delta_means.png', width = w, height = h)
deltas <- data_delta$delta[!is.na(data_delta$delta)]
# A
delta_z<-(deltas-mean(deltas))/sd(deltas)
n_dist <- length(deltas)
qqnorm(delta_z, main = "RT QQ for Norm Dist.") ## drawing the QQplot
abline(0,1)
# B
descdist(deltas, discrete = FALSE)
fit.norm.delta  <- fitdist(deltas, "norm")
summary(fit.norm.delta)
par(mfrow=c(2,2))
plot.legend <- c("normal")
denscomp(list(fit.norm.delta), legendtext = plot.legend)
cdfcomp (list(fit.norm.delta), legendtext = plot.legend)
qqcomp  (list(fit.norm.delta), legendtext = plot.legend)
ppcomp  (list(fit.norm.delta), legendtext = plot.legend)
shapiro.test(deltas) # marginally normal! it's fine.
glm.deltas <- glmer(delta ~ sess * tgt_pos + (1 | cond_order/subject), data = data_delta, family = gaussian)
data_delta
glm.deltas <- glmer(delta ~ sess * delta_rt + (1 | cond_order/subject), data = data_delta, family = gaussian)
# take the diff between median RTs to positions 1,2,3
# D1-2, D2-3, D1-3
options(scipen=999)
data_delta <- data_sum7 %>%
arrange(subject, sess,tgt_word) %>%
group_by(subject,sess,tgt_word) %>%
mutate(delta = rt_median - lead(rt_median,default=first(rt_median))) %>%
mutate(delta = round(delta,digits=5))
#This works for 1-2 and 2-3, but for 3-1 it pulls the "1" not from the same group, but from the next item in the array. adding order_by as an argument in lead, leads it to pull from the next grouping factor (i.e. 1st item in struct-tgt_word 1 after rand-tgt_word 1)
library(data.table)
data_delta <- data_delta %>%
arrange(subject,sess,tgt_word) %>%
group_by(subject,sess,tgt_word) %>%
mutate(delta1.3 = rt_median - lead(rt_median,n=2)) %>%
mutate(delta1.3 = data.table::shift(delta1.3,n=2))
vals.1.3 <- data_delta$delta1.3[which(data_delta$tgt_pos==3)]
data_delta$delta[which(data_delta$tgt_pos==3)] <- vals.1.3
data_delta <- data_delta[,-13]
data_delta <- data_delta %>%
mutate(cond_order = 0)
data_delta$cond_order[which(data_delta$subject %in% subjs_SR)] = "struct-rand"
data_delta$cond_order[which(data_delta$subject %in% subjs_RS)] = "rand-struct"
# Target positions should be recoded to delta 1-2, 2-3, 1-3 to avoid confusion.
colnames(data_delta)[2] <- "delta_rt"
data_delta <- data_delta %>%
mutate(
delta_rt = case_when(delta_rt==1 ~ "D1-2",
delta_rt==2 ~ "D2-3",
delta_rt==3 ~ "D1-3"))
data_delta <- data_delta %>% mutate(delta_rt = as.factor(delta_rt))
data_delta$delta_rt <- factor(data_delta$delta_rt, levels = c("D1-2", "D2-3", "D1-3"))
glm.deltas <- glmer(delta ~ sess * delta_rt + (1 | cond_order/subject), data = data_delta, family = gaussian)
summary(glm.deltas)
plot(glm.deltas)
qqnorm(resid(glm.deltas))
Anova(glm.deltas)
table <- as.data.frame(Anova(glm.deltas, type = '2'))
table <- table %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover")) %>%
save_kable(file = 'targetdetection_detas_table.png', self_contained = T)
em.deltas <- emmeans(glm.deltas, specs = pairwise ~ sess|tgt_pos, adjust = "tukey", transform = "response")
em.deltas <- emmeans(glm.deltas, specs = pairwise ~ sess|delta_rt, adjust = "tukey", transform = "response")
em.deltas$contrasts
(em.deltas.sess <- emmeans(glm.deltas, specs = pairwise ~ delta_rt|sess, adjust = "tukey", transform = "response"))
